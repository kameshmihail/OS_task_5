Московский Авиационный Институт
(Национальный Исследовательский Университет)

Факультет информационных технологий и прикладной математики
Кафедра вычислительной математики и программирования


Лабораторная работа №5 по курсу
«Операционные системы»
	

Содержание
1.	Постановка задания
2.	Вариант задания
3.	Общие сведения о программе
4.	Общий метод и алгоритм решения
5.	Демонстрация работы программы
6. 	Выводы

Цель работы
Целью является приобретение практических навыков в:
•	Создание динамических библиотек
•	Создание программ, которые используют функции динамических библиотек
Задание
Требуется создать динамическую библиотеку, которая реализует определенный функционал. Далее использовать данную библиотеку 2-мя способами:
1.	Во время компиляции (на этапе «линковки»/linking)
2.	Во время исполнения программы, подгрузив библиотеку в память с помощью системных вызовов
В конечном итоге, программа должна состоять из следующих частей:
•	Динамическая библиотека, реализующая заданных вариантом интерфейс;
•	Тестовая программа, которая используют библиотеку, используя знания полученные на этапе компиляции;
•	Тестовая программа, которая использует библиотеку, используя только местоположение динамической библиотеки и ее интерфейс.
Провести анализ между обоими типами использования библиотеки.


Вариант задания.
Родительский процесс считывает две координаты передает их через канал дочернему процессу.
Дочерний процесс определяет к какой четверти относится точка, а далее передает результат родительскому процессу
Использовать mmap.

Общие сведения о программе
Программа компилируется из одного файла main.c. В данном файле используются заголовочные файлы stdio.h, unistd.h, string.h, stdlib.h. В программе используются следующие системные вызовы:
1.	mmap.
2. close – для закрытия файла.
3. fork– для создания дочернего процесса.
4. sleep

Общий метод и алгоритм решения.
Для реализации поставленной задачи необходимо:
2.	Используя системный вызов fork создать дочерний процесс.
3.	В родительском процессе считывать данные cо стандартного потока
4.	Передать данный в дочерний процесс командой mmap
5.	Произвести необходимые вычисления, передать данные обратно командой mmap
6.	Считать обработанные данные и вывести на экран

Демонстрация работы программы.

1 4
Point lies in quarter 1
1 -4
Point lies in quarter 4
-1 4
Point lies in quarter 2
-1 -4 
Point lies in quarter 3
